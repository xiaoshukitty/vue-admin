"use strict";(self["webpackChunkvue_test"]=self["webpackChunkvue_test"]||[]).push([[438],{1438:function(e,t,o){o.r(t),o.d(t,{default:function(){return K}});var n=function(){var e=this,t=e._self._c;return t("div",{staticClass:"about"},[t("h1",[e._v("高德地图")]),t("div",{staticClass:"mapWrap page"},[t("baidu-map",{staticClass:"bm-view",staticStyle:{width:"100%",height:"100%"},attrs:{ak:"YOUR_APP_KEY",center:{lng:e.lng,lat:e.lat},zoom:15,"scroll-wheel-zoom":!0}},[t("bm-marker",{attrs:{position:{lng:e.lng,lat:e.lat},animation:"BMAP_ANIMATION_BOUNCE"},on:{click:function(t){e.show=!0}}},[t("bm-label",{attrs:{content:e.baseName,labelStyle:{color:"red",fontSize:"12px",borderRadius:"4px"},offset:{width:-35,height:30}}})],1),t("bm-geolocation",{attrs:{anchor:"BMAP_ANCHOR_BOTTOM_RIGHT",showAddressBar:!0,autoLocation:!0,locationIcon:e.icon}})],1),t("div",{staticClass:"content"},[t("ul",[t("li",[t("a",{attrs:{href:e.autoNaviUrl}},[e._v("高德地图")])])])])],1)])},a=[],i=function(){var e=this,t=e._self._c;return t("div",[e.hasBmView?e._e():t("div",{ref:"view",staticStyle:{width:"100%",height:"100%"}}),e._t("default")],2)},s=[],l={"bm-map":["click","dblclick","rightclick","rightdblclick","maptypechange","mousemove","mouseover","mouseout","movestart","moving","moveend","zoomstart","zoomend","addoverlay","addcontrol","removecontrol","removeoverlay","clearoverlays","dragstart","dragging","dragend","addtilelayer","removetilelayer","load","resize","hotspotclick","hotspotover","hotspotout","tilesloaded","touchstart","touchmove","touchend","longpress"],"bm-geolocation":["locationSuccess","locationError"],"bm-overview-map":["viewchanged","viewchanging"],"bm-marker":["click","dblclick","mousedown","mouseup","mouseout","mouseover","remove","infowindowclose","infowindowopen","dragstart","dragging","dragend","rightclick"],"bm-polyline":["click","dblclick","mousedown","mouseup","mouseout","mouseover","remove","lineupdate"],"bm-polygon":["click","dblclick","mousedown","mouseup","mouseout","mouseover","remove","lineupdate"],"bm-circle":["click","dblclick","mousedown","mouseup","mouseout","mouseover","remove","lineupdate"],"bm-label":["click","dblclick","mousedown","mouseup","mouseout","mouseover","remove","rightclick"],"bm-info-window":["close","open","maximize","restore","clickclose"],"bm-ground":["click","dblclick"],"bm-autocomplete":["onconfirm","onhighlight"],"bm-point-collection":["click","mouseover","mouseout"]};function r(e,t){const o=t||l[this.$options.name];o&&o.forEach((t=>{const o="on"===t.slice(0,2),n=o?t.slice(2):t,a=this.$listeners[n];a&&e.addEventListener(t,a.fns)}))}const c=e=>Object.prototype.toString.call(e).slice(8,-1);var p={name:"bm-map",props:{ak:{type:String},center:{type:[Object,String]},zoom:{type:Number},minZoom:{type:Number},maxZoom:{type:Number},highResolution:{type:Boolean,default:!0},mapClick:{type:Boolean,default:!0},mapType:{type:String},dragging:{type:Boolean,default:!0},scrollWheelZoom:{type:Boolean,default:!1},doubleClickZoom:{type:Boolean,default:!0},keyboard:{type:Boolean,default:!0},inertialDragging:{type:Boolean,default:!0},continuousZoom:{type:Boolean,default:!0},pinchToZoom:{type:Boolean,default:!0},autoResize:{type:Boolean,default:!0},theme:{type:Array},mapStyle:{type:Object}},watch:{center(e,t){const{map:o,zoom:n}=this;"String"===c(e)&&e!==t&&o.centerAndZoom(e,n)},"center.lng"(e,t){const{BMap:o,map:n,zoom:a,center:i}=this;e!==t&&e>=-180&&e<=180&&n.centerAndZoom(new o.Point(e,i.lat),a)},"center.lat"(e,t){const{BMap:o,map:n,zoom:a,center:i}=this;e!==t&&e>=-74&&e<=74&&n.centerAndZoom(new o.Point(i.lng,e),a)},zoom(e,t){const{map:o}=this;e!==t&&e>=3&&e<=19&&o.setZoom(e)},minZoom(e){const{map:t}=this;t.setMinZoom(e)},maxZoom(e){const{map:t}=this;t.setMaxZoom(e)},highResolution(){this.reset()},mapClick(){this.reset()},mapType(e){const{map:t}=this;t.setMapType(o.g[e])},dragging(e){const{map:t}=this;e?t.enableDragging():t.disableDragging()},scrollWheelZoom(e){const{map:t}=this;e?t.enableScrollWheelZoom():t.disableScrollWheelZoom()},doubleClickZoom(e){const{map:t}=this;e?t.enableDoubleClickZoom():t.disableDoubleClickZoom()},keyboard(e){const{map:t}=this;e?t.enableKeyboard():t.disableKeyboard()},inertialDragging(e){const{map:t}=this;e?t.enableInertialDragging():t.disableInertialDragging()},continuousZoom(e){const{map:t}=this;e?t.enableContinuousZoom():t.disableContinuousZoom()},pinchToZoom(e){const{map:t}=this;e?t.enablePinchToZoom():t.disablePinchToZoom()},autoResize(e){const{map:t}=this;e?t.enableAutoResize():t.disableAutoResize()},theme(e){const{map:t}=this;t.setMapStyle({styleJson:e})},"mapStyle.features":{handler(e,t){const{map:o,mapStyle:n}=this,{style:a,styleJson:i}=n;o.setMapStyle({styleJson:i,features:e,style:a})},deep:!0},"mapStyle.style"(e,t){const{map:o,mapStyle:n}=this,{features:a,styleJson:i}=n;o.setMapStyle({styleJson:i,features:a,style:e})},"mapStyle.styleJson":{handler(e,t){const{map:o,mapStyle:n}=this,{features:a,style:i}=n;o.setMapStyle({styleJson:e,features:a,style:i})},deep:!0},mapStyle(e){const{map:t,theme:o}=this;!o&&t.setMapStyle(e)}},methods:{setMapOptions(){const{map:e,minZoom:t,maxZoom:n,mapType:a,dragging:i,scrollWheelZoom:s,doubleClickZoom:l,keyboard:r,inertialDragging:c,continuousZoom:p,pinchToZoom:h,autoResize:m}=this;t&&e.setMinZoom(t),n&&e.setMaxZoom(n),a&&e.setMapType(o.g[a]),i?e.enableDragging():e.disableDragging(),s?e.enableScrollWheelZoom():e.disableScrollWheelZoom(),l?e.enableDoubleClickZoom():e.disableDoubleClickZoom(),r?e.enableKeyboard():e.disableKeyboard(),c?e.enableInertialDragging():e.disableInertialDragging(),p?e.enableContinuousZoom():e.disableContinuousZoom(),h?e.enablePinchToZoom():e.disablePinchToZoom(),m?e.enableAutoResize():e.disableAutoResize()},init(e){if(this.map)return;let t=this.$refs.view;for(let r of this.$slots.default||[])r.componentOptions&&"bm-view"===r.componentOptions.tag&&(this.hasBmView=!0,t=r.elm);const o=new e.Map(t,{enableHighResolution:this.highResolution,enableMapClick:this.mapClick});this.map=o;const{setMapOptions:n,zoom:a,getCenterPoint:i,theme:s,mapStyle:l}=this;s?o.setMapStyle({styleJson:s}):o.setMapStyle(l),n(),r.call(this,o),o.reset(),o.centerAndZoom(i(),a),this.$emit("ready",{BMap:e,map:o})},getCenterPoint(){const{center:e,BMap:t}=this;switch(c(e)){case"String":return e;case"Object":return new t.Point(e.lng,e.lat);default:return new t.Point}},initMap(e){this.BMap=e,this.init(e)},getMapScript(){if(o.g.BMap)return o.g.BMap._preloader?o.g.BMap._preloader:Promise.resolve(o.g.BMap);{const e=this.ak||this._BMap().ak;return o.g.BMap={},o.g.BMap._preloader=new Promise(((t,n)=>{o.g._initBaiduMap=function(){t(o.g.BMap),o.g.document.body.removeChild(a),o.g.BMap._preloader=null,o.g._initBaiduMap=null};const a=document.createElement("script");o.g.document.body.appendChild(a),a.src=`https://api.map.baidu.com/api?v=2.0&ak=${e}&callback=_initBaiduMap`})),o.g.BMap._preloader}},reset(){const{getMapScript:e,initMap:t}=this;e().then(t)}},mounted(){this.reset()},data(){return{hasBmView:!1}}},h=p,m=o(43736),d=(0,m.Z)(h,i,s,!1,null,null,null),g=d.exports,u=function(){var e=this,t=e._self._c;return t("div",[e._t("default")],2)},b=[];const y={control:{unload:"removeControl"},layer:{unload:"removeTileLayer"},overlay:{unload:"removeOverlay"},contextMenu:{unload:"removeContextMenu"}},f=e=>e.abstract||e.$el===e.$children[0].$el?f(e.$parent):e;function w(){const{unload:e,renderByParent:t,$parent:o}=this;t&&o.reload(),e()}class B{constructor(e){this.methods={ready(){const e=f(this.$parent),t=this.BMap=e.BMap,o=this.map=e.map;this.load(),this.$emit("ready",{BMap:t,map:o})},transmitEvent(e){this.$emit(e.type.replace(/^on/,""),e)},reload(){this&&this.BMap&&this.$nextTick((()=>{this.unload(),this.$nextTick(this.load)}))},unload(){const{map:t,originInstance:o}=this;try{switch(e.type){case"search":return o.clearResults();case"autoComplete":case"lushu":return o.dispose();case"markerClusterer":return o.clearMarkers();default:t[y[e.type].unload](o)}}catch(n){}}},this.computed={renderByParent(){return this.$parent.preventChildrenRender}},this.mounted=function(){const e=f(this.$parent),t=e.map,{ready:o}=this;t?o():e.$on("ready",o)},this.destroyed=w,this.beforeDestroy=w}}var M=e=>new B({type:e});function v(e,t={}){const{lng:o,lat:n}=t;return new e.Point(o,n)}function k(e,t={}){const{width:o,height:n}=t;return new e.Size(o,n)}function I(e,t={}){const{url:o,size:n,opts:a={}}=t;return new e.Icon(o,k(e,n),{anchor:a.anchor&&k(e,a.anchor),imageSize:a.imageSize&&k(e,a.imageSize),imageOffset:a.imageOffset&&k(e,a.imageOffset),infoWindowAnchor:a.infoWindowAnchor&&k(e,a.infoWindowAnchor),printImageUrl:a.printImageUrl})}function S(e,t={}){const{content:o,opts:n}=t;return new e.Label(o,{offset:n.offset&&k(e,n.offset),position:n.position&&v(e,n.position),enableMassClear:n.enableMassClear})}var C,Z,z,O,x={name:"bm-marker",mixins:[M("overlay")],props:{position:{},offset:{},icon:{},massClear:{type:Boolean,default:!0},dragging:{type:Boolean,default:!1},clicking:{type:Boolean,default:!0},raiseOnDrag:{type:Boolean,default:!1},draggingCursor:{type:String},rotation:{type:Number},shadow:{type:Object},title:{type:String},label:{type:Object},animation:{type:String},top:{type:Boolean,default:!1},zIndex:{type:Number,default:0}},watch:{"position.lng"(e,t){const{BMap:o,originInstance:n,position:a,renderByParent:i,$parent:s}=this;e!==t&&e>=-180&&e<=180&&n.setPosition(v(o,{lng:e,lat:a.lat})),i&&s.reload()},"position.lat"(e,t){const{BMap:o,originInstance:n,position:a,renderByParent:i,$parent:s}=this;e!==t&&e>=-74&&e<=74&&n.setPosition(v(o,{lng:a.lng,lat:e})),i&&s.reload()},"offset.width"(e,t){const{BMap:o,originInstance:n}=this;e!==t&&n.setOffset(new o.Size(e,this.offset.height))},"offset.height"(e,t){const{BMap:o,originInstance:n}=this;e!==t&&n.setOffset(new o.Size(this.offset.width,e))},icon:{deep:!0,handler(e){const{BMap:t,originInstance:o,rotation:n}=this;o&&o.setIcon(I(t,e)),n&&o&&o.setRotation(n)}},massClear(e){e?this.originInstance.enableMassClear():this.originInstance.disableMassClear()},dragging(e){e?this.originInstance.enableDragging():this.originInstance.disableDragging()},clicking(){this.reload()},raiseOnDrag(){this.reload()},draggingCursor(e){this.originInstance.setDraggingCursor(e)},rotation(e){this.originInstance.setRotation(e)},shadow(e){this.originInstance.setShadow(e)},title(e){this.originInstance.setTitle(e)},label(e){this.reload()},animation(e){this.originInstance.setAnimation(o.g[e])},top(e){this.originInstance.setTop(e)},zIndex(e){this.originInstance.setZIndex(e)}},methods:{load(){const{BMap:e,map:t,position:n,offset:a,icon:i,massClear:s,dragging:l,clicking:c,raiseOnDrag:p,draggingCursor:h,rotation:m,shadow:d,title:g,label:u,animation:b,top:y,renderByParent:f,$parent:w,zIndex:B}=this,M=new e.Marker(new e.Point(n.lng,n.lat),{offset:a,icon:i&&I(e,i),enableMassClear:s,enableDragging:l,enableClicking:c,raiseOnDrag:p,draggingCursor:h,rotation:m,shadow:d,title:g});this.originInstance=M,u&&M&&M.setLabel(S(e,u)),M.setTop(y),M.setZIndex(B),r.call(this,M),f?w.reload():t.addOverlay(M),M.setAnimation(o.g[b])}}},_=x,A=(0,m.Z)(_,u,b,!1,null,null,null),$=A.exports,P={name:"bm-label",render(){},mixins:[M("overlay")],props:{content:{type:String},title:{type:String},offset:{},position:{},labelStyle:{},zIndex:{type:Number,default:0},massClear:{type:Boolean,default:!0}},watch:{content(e){this.originInstance.setContent(e)},title(e){this.originInstance.setTitle(e)},"offset.width"(e,t){const{BMap:o}=this;e.toString()!==t.toString()&&this.originInstance.setOffset(k(o,{width:e,height:this.offset.height}))},"offset.height"(e,t){const{BMap:o}=this;e.toString()!==t.toString()&&this.originInstance.setOffset(k(o,{width:this.offset.width,height:e}))},"position.lng"(e,t){const{BMap:o}=this,n=e;e.toString()!==t.toString()&&n>=-180&&n<=180&&this.originInstance.setCenter(v(o,{lng:n,lat:this.center.lat}))},"position.lat"(e,t){const{BMap:o}=this,n=e;e.toString()!==t.toString()&&n>=-74&&n<=74&&this.originInstance.setCenter(v(o,{lng:this.center.lng,lat:n}))},labelStyle:{handler(e){this.originInstance.setStyle(e)},deep:!0},zIndex(e){this.originInstance.setZIndex(e)},massClear(e){e?this.originInstance.enableMassClear():this.originInstance.disableMassClear()}},methods:{load(){const{BMap:e,map:t,content:o,title:n,offset:a,position:i,labelStyle:s,zIndex:l,massClear:c,$parent:p}=this,h=new e.Label(o,{offset:k(e,a),position:v(e,i),enableMassClear:c});this.originInstance=h;try{p.originInstance.setLabel(h)}catch(m){t.addOverlay(h)}n&&h.setTitle(n),s&&h.setStyle(s),l&&h.setZIndex(l),r.call(this,h)}}},D=P,T=(0,m.Z)(D,C,Z,!1,null,null,null),R=T.exports,N={name:"bm-geolocation",render(){},mixins:[M("control")],props:{anchor:{type:String},offset:{type:Object},showAddressBar:{type:Boolean},autoLocation:{type:Boolean},locationIcon:{type:Object}},watch:{anchor(){this.reload()},offset(){this.reload()},showAddressBar(){this.reload()},autoLocation(){this.reload()},locationIcon(){this.reload()}},methods:{load(){const{BMap:e,map:t,anchor:n,showAddressBar:a,autoLocation:i,locationIcon:s,offset:l}=this;this.originInstance=new e.GeolocationControl({anchor:o.g[n],showAddressBar:a,enableAutoLocation:i,offset:l&&k(e,l),locationIcon:s&&I(e,s)}),r.call(this,this.originInstance),t.addControl(this.originInstance)}}},L=N,W=(0,m.Z)(L,z,O,!1,null,null,null),j=W.exports,J={data(){return{lng:116.404,lat:39.915,baseName:"北京天安门",icon:{size:{width:40,height:40},opts:{anchor:{width:27,height:13}}},show:!1,autoNaviUrl:""}},components:{BaiduMap:g,BmMarker:$,BmGeolocation:j,BmLabel:R},created(){this.autoNaviUrl=`https://uri.amap.com/marker?position=${this.lng},${this.lat}&name=${this.baseName}`}},E=J,U=(0,m.Z)(E,n,a,!1,null,"1c508e9a",null),K=U.exports}}]);